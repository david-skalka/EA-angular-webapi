<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using Microsoft.EntityFrameworkCore;
using <#= ProjectName #>;
using <#= ProjectName #>.Models;

namespace <#= ProjectName #>IntegrationTest.Seeders
{

    public class DefaultSeeder : ISeeder
    {

<# foreach (var model in Entities) { #>
   
<#
var _override = model.Attributes.Where(x=> !x.Type.IsPrimitive).ToDictionary(attr => attr.Name+"Id", attr=>(object)1);
#>


    virtual protected List<<#= model.Name  #>> <#= model.Name #>
    {
            get
            {
                return new List<<#= model.Name  #>>{
<# for(var i=0; i< Count; i++) { #>
<# var _overrideLocal=_override.ToDictionary(x=>x.Key, x=>x.Value); _overrideLocal.Add("Id", i+1); #>
                <#=new ObjectInitializer() { Model = model, Values = ElementAutoFaker.GenerateFromElement(model, _overrideLocal) }.TransformText()  #>,
<# } #>
            };
        }
    }


<# } #>


    public virtual List<object> GetAll()
    {
        var retD = new List<object>();
<# foreach(var entity in Entities) { #>
        retD.AddRange(<#= entity.Name  #>);
<# } #>
        return retD;
    }


    public void Seed(ApplicationDbContext dbContext)
    {
        GetAll().ForEach(x =>
        {
            dbContext.AddRange(x);
            dbContext.SaveChanges();
        });
    }

    public void Clear(ApplicationDbContext dbContext)
    {
        var tables = GetAll().Select((x => x.GetType())).Distinct().Reverse();
        foreach (var table in tables)
        {
            var myClassTableName = dbContext.Model.FindEntityType(table);

            if (myClassTableName != null)
                dbContext.Database.ExecuteSqlRaw(
                    "DELETE FROM " + myClassTableName.GetTableName()
                );
        }
    }

 

}




}


<#+
public Element[] Entities { get; set; }

public String ProjectName { get; set; }

public int Count { get; set; }

#>